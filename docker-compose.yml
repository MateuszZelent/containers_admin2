services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: containers_admin_backend
    privileged: true  # Wymagane dla FUSE/sshfs
    ports:
      - "5678:5678"  # Port debuggera
      - "8000:8000"
      - "8600-8700:8600-8700"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/containers_admin
      - SECRET_KEY=zmientomnabardziejzlozonehaslo
      - LOG_LEVEL=DEBUG
      - SSH_KEY_PATH=/root/.ssh/id_rsa
      - CADDY_API_URL=http://host.docker.internal:2020
      - BASE_URL=https://amucontainers.orion.zfns.eu.org
      # Konfiguracja ścieżek dla kontenerów
      - CONTAINER_OUTPUT_DIR=/mnt/storage_3/home/kkingstoun/containers/run
      - TEMPLATE_DIR=/app/slurm_templates
    volumes:
      - ./backend:/app
      - /app/__pycache__
      # Montowanie klucza SSH z hosta do kontenera
      - ~/.ssh/id_rsa:/root/.ssh/id_rsa:ro
      - ~/.ssh/known_hosts:/root/.ssh/known_hosts:ro
      # Montowanie ścieżki do plików kontenerów
      - /mnt/storage_3:/mnt/storage_3:ro
    devices:
      - /dev/fuse:/dev/fuse  # Wymagane dla FUSE
    cap_add:
      - SYS_ADMIN  # Wymagane dla montowania systemów plików
    security_opt:
      - apparmor:unconfined  # Wymagane dla niektórych operacji FUSE
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - postgres_network
      - app_network
    extra_hosts:
      - "caddy-host:host-gateway"

  postgres:
    image: postgres:13
    container_name: containers_admin_postgres_new
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=containers_admin
    ports:
      - "5433:5432"
    volumes:
      - postgres_data2:/var/lib/postgresql/data  # Odkomentowane
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - postgres_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: containers_admin_frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://amucontainers.orion.zfns.eu.org
      - NEXT_PUBLIC_BASE_URL=https://amucontainers.orion.zfns.eu.org
    networks:
      - app_network
    restart: unless-stopped
    depends_on:
      - backend

volumes:
  postgres_data2:
    name: containers_admin_postgres_data2

networks:
  postgres_network:
    name: containers_admin_network
    
  app_network:
    name: containers_admin_app_network
    driver: bridge